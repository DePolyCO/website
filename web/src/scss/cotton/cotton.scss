// keys/values that appear in the compiled CSS are wrapped in quotes,
// to allow for the inclusion of numbers

// $breakpoints: (
//   "t": "875px",
// );

$cotton: (
  "background-color": (
    prefix: "bg-",
    values: (
      "white": "#fff",
      "black": "#000",
    ),
  ),
  "color": (
    prefix: "c-",
    values: (
      "white": "#fff",
      "black": "#000",
    ),
  ),
  "font-family": (
    prefix: "",
    values: (
      "sans":
        "'fkvar', -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Ubuntu, roboto, noto, arial, sans-serif",
      "serif":
        "Iowan Old Style, Apple Garamond, Baskerville, Times New Roman, Droid Serif, Times, Source Serif Pro, serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol",
      "mono":
        "'fk-mono', SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;",
    ),
  ),
  "font-variation-settings": (
    prefix: "fv-",
    values: (
      "mono": '"mono" 100',
      "italic": '"ital" 120',
    ),
  ),
  "align-items": (
    prefix: "ai",
    values: (
      "b": "baseline",
      "c": "center",
      "fe": "flex-end",
      "fs": "flex-start",
      "s": "stretch",
    ),
  ),
  "cursor": (
    prefix: "c",
    values: (
      "p": "pointer",
    ),
  ),
  "display": (
    prefix: "d",
    values: (
      "b": "block",
      "ib": "inline-block",
      "f": "flex",
      "g": "grid",
      "n": "none",
    ),
  ),
  "contain": (
    prefix: "contain",
    values: (
      "": "content",
    ),
  ),
  "flex-direction": (
    prefix: "f",
    values: (
      "c": "column",
      "cr": "column-reverse",
      "r": "row",
      "rr": "row-reverse",
    ),
  ),
  "flex-wrap": (
    prefix: "f",
    values: (
      "n": "no-wrap",
      "w": "wrap",
      "wr": "wrap-reverse",
    ),
  ),
  "justify-content": (
    prefix: "jc",
    values: (
      "c": "center",
      "e": "flex-end",
      "s": "flex-start",
      "a": "space-around",
      "b": "space-between",
    ),
  ),
  "position": (
    prefix: "p",
    values: (
      "a": "absolute",
      "f": "fixed",
      "r": "relative",
      "s": "static",
    ),
  ),
  "top": (
    prefix: "",
    values: (
      "top": "0",
    ),
  ),
  "right": (
    prefix: "",
    values: (
      "right": "0",
    ),
  ),
  "bottom": (
    prefix: "",
    values: (
      "bottom": "0",
    ),
  ),
  "left": (
    prefix: "",
    values: (
      "left": "0",
    ),
  ),
  "inset": (
    prefix: "inset",
    values: (
      "": 0,
    ),
  ),
  "text-align": (
    prefix: "ta",
    values: (
      "c": "center",
      "l": "left",
      "r": "right",
    ),
  ),
  "text-transform": (
    prefix: "tt",
    values: (
      "u": "uppercase",
    ),
  ),
  "font-style": (
    prefix: "fs",
    values: (
      "i": "italic",
    ),
  ),
  "overflow": (
    prefix: "o",
    values: (
      "h": "hidden",
    ),
  ),
  "pointer-events": (
    prefix: "pe",
    values: (
      "n": "none",
      "a": "all",
    ),
  ),
  "z-index": (
    prefix: "z",
    values: (
      "n10": "-10",
      "n9": "-9",
      "n8": "-8",
      "n7": "-7",
      "n6": "-6",
      "n5": "-5",
      "n4": "-4",
      "n3": "-3",
      "n2": "-2",
      "n1": "-1",
      "0": "0",
      "1": "1",
      "2": "2",
      "3": "3",
      "4": "4",
      "5": "5",
      "6": "6",
      "7": "7",
      "8": "8",
      "9": "9",
      "10": "10",
    ),
  ),
  "visibility": (
    prefix: "v",
    values: (
      "h": "hidden",
      "v": "visible",
    ),
  ),
);

// mobile classes generation

@each $prop, $config in $cotton {
  @each $prefix, $value in map-get($config, "values") {
    .#{ map-get($config, "prefix") }#{ $prefix } {
      #{ $prop }: #{$value};
    }
  }
}

// breakpoint classes generation

// @each $label, $size in $breakpoints {
//   @media screen and (min-width: $size) {
//     @each $prop, $config in $cotton {
//       @each $prefix, $value in map-get($config, "values") {
//         .#{ $label }-#{ map-get($config, "prefix") }#{ $prefix } {
//           #{ $prop }: #{ $value };
//         }
//       }
//     }
//   }
// }
